{
  ExecuteCalled: false,
  Config: {
    foo: null
  },
  LogDebug: {
    Type: Action<string>,
    Target: InnerWeaver,
    Method: Void SetProperties(System.String)
  },
  LogInfo: {
    Type: Action<string>,
    Target: InnerWeaver,
    Method: Void SetProperties(System.String)
  },
  LogMessage: {
    Type: Action<string, MessageImportance>,
    Target: InnerWeaver,
    Method: Void SetProperties(System.String, Fody.MessageImportance)
  },
  LogWarning: {
    Type: Action<string>,
    Target: InnerWeaver,
    Method: Void SetProperties(System.String)
  },
  LogWarningPoint: {
    Type: Action<string, SequencePoint>,
    Target: InnerWeaver,
    Method: Void LogWarningPoint(System.String, Mono.Cecil.Cil.SequencePoint)
  },
  LogError: {
    Type: Action<string>,
    Target: MockBuildLogger,
    Method: Void LogError(System.String)
  },
  LogErrorPoint: {
    Type: Action<string, SequencePoint>,
    Target: InnerWeaver,
    Method: Void LogErrorPoint(System.String, Mono.Cecil.Cil.SequencePoint)
  },
  ResolveAssembly: {
    Type: Func<string, AssemblyDefinition>,
    Target: InnerWeaver,
    Method: Mono.Cecil.AssemblyDefinition SetProperties(System.String)
  },
  AssemblyResolver: {},
  AssemblyFilePath: AssemblyFilePath,
  ProjectDirectoryPath: ProjectDirectoryPath,
  ProjectFilePath: ProjectFilePath,
  DocumentationFilePath: DocumentationFile,
  AddinDirectoryPath: c:\FakePath,
  SolutionDirectoryPath: SolutionDirectoryPath,
  References: Ref1;Ref2,
  ReferenceCopyLocalPaths: [
    CopyRef1,
    CopyRef2
  ],
  DefineConstants: [
    Debug,
    Release
  ],
  FindType: {
    Type: Func<string, TypeDefinition>,
    Target: TypeCache,
    Method: Mono.Cecil.TypeDefinition FindType(System.String)
  },
  TryFindType: {
    Type: TryFindTypeFunc,
    Target: TypeCache,
    Method: Boolean TryFindType(System.String, Mono.Cecil.TypeDefinition ByRef)
  },
  ShouldCleanReference: false
}